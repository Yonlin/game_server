require 'yaml'

api_path = File.expand_path("./api/request.yml")
routes_path = File.expand_path("./src/app/generates/routes.erl")
request_decoder_path = File.expand_path("./src/app/generates/request_decoder.erl")

api = YAML.load_file(api_path)

header = ""
header << "%%%===================================================================\n"
header << "%%% Generated by generate_api.rb #{Time.now}\n"
header << "%%%==================================================================="

routes_content = %Q{#{header}
-module(routes).
-export(route/1).
}

decoder_content = %Q{#{header}
-module(request_decoder).
-export(decode/2).

map([], [], Result) ->
    Result;
map([Key|Keys], [Value|Values], Result) ->
    map(Keys, Values, [{Key, Value}|Result]).

}


size = api.size
api.each_with_index do |packet, idx|
  path, value = packet
  punctuation = (size - 1 == idx ? '.' : ';')

  controller, action = path.split('#')
  routes_content << %Q{
route(#{value['type']}) ->
    {#{controller}, #{action}}#{punctuation}
  }

  decoder_content << %Q{
decode(Bin, #{value['type']}) ->
    Keys = [#{value['attributes'].keys.join(',')}],
    Rule = {#{value['attributes'].values.join(',')}},
    Values = utils_protocol:decode(Bin, Rule),
    map(Keys, tuple_to_list(Values), [])#{punctuation}
  }
end

File.open(routes_path, 'w'){|io| io.write routes_content}
File.open(request_decoder_path, 'w'){|io| io.write decoder_content}
