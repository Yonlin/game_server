%%%===================================================================
%%% Generated by generate_api.rb 2014-02-28 18:08:05 +0800
%%%===================================================================
-module(response_decoder).
-export([decode/1]).
-include("include/protocol.hrl").

decode(<<1:?SHORT, Bin0/binary>>) ->
    {Name, Bin1} = utils_protocol:decode_string(Bin0),
    {PositionX, Bin2} = utils_protocol:decode_integer(Bin1),
    {PositionY, Bin3} = utils_protocol:decode_integer(Bin2),
    {UserId, Bin4} = utils_protocol:decode_string(Bin3),
    {[{name, Name}, {position_x, PositionX}, {position_y, PositionY}, {user_id, UserId}], Bin4};
decode(<<2:?SHORT, Bin0/binary>>) ->
    {Name, Bin1} = utils_protocol:decode_string(Bin0),
    {Position, Bin2} = utils_protocol:decode_integer(Bin1),
    {[{name, Name}, {position, Position}], Bin2};
decode(<<3:?SHORT, Bin0/binary>>) ->
    {Uuid, Bin1} = utils_protocol:decode_string(Bin0),
    {Udid, Bin2} = utils_protocol:decode_string(Bin1),
    {Name, Bin3} = utils_protocol:decode_string(Bin2),
    {Gem, Bin4} = utils_protocol:decode_integer(Bin3),
    {Paid, Bin5} = utils_protocol:decode_float(Bin4),
    {Building, Bin6} = response_decoder:decode(Bin5),
    {Towns, Bin7} = utils_protocol:decode_array(Bin6, fun(Data) -> response_decoder:decode(Data) end),
    {[{uuid, Uuid}, {udid, Udid}, {name, Name}, {gem, Gem}, {paid, Paid}, {building, Building}, {towns, Towns}], Bin7}.
