## The MIT License (MIT)
##
## Copyright (c) 2014-2024
## Savin Max <mafei.198@gmail.com>
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in all
## copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.


desc "Generate const variables to game server from excel!"
task :generate_const => :environment do
  config_dir = File.expand_path("#{FRAMEWORK_ROOT_DIR}/app/config_data/const_data")

  Dir.foreach(config_dir) do |config_file_path|
    extname = File.extname(config_file_path)
    if extname == '.xlsx'
      s = Roo::Excelx.new(File.expand_path(config_dir + '/' + config_file_path))
    elsif extname == '.xls'
      s = Roo::Excel.new(File.expand_path(config_dir + '/'+ config_file_path))
    else
      next
    end

    s.sheets.each do |sheet|
      content = "%% Generated by generate_const: #{Time.now}\n"
      content << "-module(#{sheet}).\n"
      content << "-export([const/1]).\n\n"

      s.default_sheet = sheet
      const_type = s.row(2)[1].split(":").last
      values = 4.upto(s.last_row).map do |row|
        const_name  = s.row(row)[0]
        if const_type == 'float'
          const_value = s.row(row)[1]
        elsif const_type == 'integer'
          const_value = s.row(row)[1].to_i
        else
          raise "Const Type Not Defined: #{const_type}"
        end
        content << "const(#{const_name}) -> #{const_value};\n"
      end
      content << "const(Name) -> {fail, Name}."

      file_path = "#{FRAMEWORK_ROOT_DIR}/app/generates/#{sheet}.erl"
      File.open(file_path, "w") {|io| io.write content }
    end
  end
end
