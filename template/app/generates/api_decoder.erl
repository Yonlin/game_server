%%%===================================================================
%%% Generated by generate_api.rb 2014-07-28 16:06:37 +0800
%%%===================================================================
-module(api_decoder).
-export([decode/1, decode_protocol/2]).
-include("include/protocol.hrl").

decode(<<ProtocolId:?SHORT, Data/binary>>) ->
    ProtocolName = api_protocol:protocol_name(ProtocolId),
    decode_protocol(ProtocolName, Data).

decode_protocol(ok, Bin0) ->
    {Code, Bin1} = utils_protocol:decode_integer(Bin0),
    {[{code, Code}], Bin1};
decode_protocol(fail, Bin0) ->
    {Code, Bin1} = utils_protocol:decode_integer(Bin0),
    {Desc, Bin2} = utils_protocol:decode_string(Bin1),
    {[{code, Code}, {desc, Desc}], Bin2};
decode_protocol(delete, Bin0) ->
    {TargetName, Bin1} = utils_protocol:decode_string(Bin0),
    {TargetUuid, Bin2} = utils_protocol:decode_string(Bin1),
    {[{target_name, TargetName}, {target_uuid, TargetUuid}], Bin2};
decode_protocol(delete_all, Bin0) ->
    {TargetName, Bin1} = utils_protocol:decode_string(Bin0),
    {[{target_name, TargetName}], Bin1};
decode_protocol(user, Bin0) ->
    {Uuid, Bin1} = utils_protocol:decode_string(Bin0),
    {Udid, Bin2} = utils_protocol:decode_string(Bin1),
    {Name, Bin3} = utils_protocol:decode_string(Bin2),
    {[{uuid, Uuid}, {udid, Udid}, {name, Name}], Bin3};
decode_protocol(login_params, Bin0) ->
    {Udid, Bin1} = utils_protocol:decode_string(Bin0),
    {[{udid, Udid}], Bin1}.
